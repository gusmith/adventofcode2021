name: "Python"

on:
  push:
    branches: [ main ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main ]

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.11", "3.12", "3.13" ]
    env:
      working-directory: ./python
      test-result-file: test-results.xml

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup poetry
      run: |
        pipx install poetry==2.1.1

    - name: Dependency install
      working-directory: ${{env.working-directory}}
      run: |
        poetry install

    - name: Pytest
      working-directory: ${{env.working-directory}}
      run: |
        poetry run pytest --doctest-modules --junit-xml=${{env.test-result-file}}

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: Test Results (Python ${{ matrix.python-version }})
        path: ${{env.working-directory}}/${{env.test-result-file}}

    - name: Linter
      working-directory: ${{env.working-directory}}
      run: |
        poetry run ./scripts/lint.sh

  publish-test-results:
    name: "Publish Tests Results"
    needs: test
    runs-on: ubuntu-latest
    if: always()
    permissions:
      checks: write
      pull-requests: write

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        check_name: "Test results"
        files: artifacts/**/*.xml
